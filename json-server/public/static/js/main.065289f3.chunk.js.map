{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/DishDetails.js","components/HeaderComponents.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","onClick","to","id","width","Menu","menu","dishes","map","key","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","postFeedback","resetFeedbackForm","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","RenderLeader","leaders","tag","left","middle","object","body","heading","About","title","list","CommentForm","state","isModalOpen","toggleModal","setState","postComment","dishId","rating","author","comment","Fragment","outline","isOpen","toggle","value","RenderDish","RenderComments","comments","cmts","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","password","remember","checked","preventDefault","dark","expand","height","navbar","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","message","json","addComment","catch","console","log","actions","reset","feedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qQAEaA,EAAU,WACtB,OACQ,yBAAKC,UAAU,UACb,0BAAMA,UAAU,oDAChB,8CCNEC,EAAU,yB,QCMvB,SAASC,EAAT,GAAgD,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,QACjC,OAAID,EAEE,kBAAC,EAAD,MAGGC,EAEJ,4BAAKA,GAKT,kBAAC,gBAAD,CAAeC,IAAE,EACdC,eAAgB,CACZC,cAAe,+BAElB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASC,IAAKR,EAAUE,EAAKO,MAAOC,IAAKR,EAAKS,OAC9C,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAYT,EAAKS,MACdT,EAAKU,YAAc,kBAAC,IAAD,KAAeV,EAAKU,aAA6B,KACrE,kBAAC,IAAD,KAAWV,EAAKW,gBAgCjBC,MAzBf,SAAcC,GACd,OACK,yBAAKhB,UAAU,aACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,qBACZ,kBAACE,EAAD,CAAYC,KAAOa,EAAMC,KACzBb,UAAWY,EAAME,cACjBb,QAASW,EAAMG,iBAElB,yBAAKnB,UAAU,qBACZ,kBAACE,EAAD,CAAYC,KAAOa,EAAMI,UACzBhB,UAAWY,EAAMK,cACjBhB,QAASW,EAAMM,iBAElB,yBAAKtB,UAAU,qBACZ,kBAACE,EAAD,CAAYC,KAAOa,EAAMO,OACzBnB,UAAWY,EAAMQ,eACjBnB,QAASW,EAAMS,qB,OC7C3B,SAASC,EAAT,GAA0C,IAAhBT,EAAe,EAAfA,KAAe,EAATU,QAC9B,OACK,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAMC,GAAE,gBAAYX,EAAKY,KACtB,kBAAC,IAAD,CAASC,MAAM,OAAOrB,IAAKR,EAAUgB,EAAKP,MAAOC,IAAKM,EAAKL,OAE/D,kBAAC,IAAD,KACA,kBAAC,IAAD,KAAYK,EAAKL,SAQzB,IAoDcmB,EApDD,SAACf,GAEb,IAAMgB,EAAOhB,EAAMiB,OAAOA,OAAOC,KAAI,SAACjB,GACtC,OAEG,yBAAKkB,IAAKlB,EAAKY,GAAI7B,UAAU,uBAC3B,kBAAC0B,EAAD,CAAgBT,KAAMA,QAMzB,OAAGD,EAAMiB,OAAO7B,UAEV,yBAAKJ,UAAU,aACb,yBAAKA,UAAU,OACb,kBAAC,EAAD,QAMDgB,EAAMiB,OAAO5B,QAEhB,yBAAKL,UAAU,aACb,yBAAKA,UAAU,OACb,4BAAKgB,EAAMiB,OAAO5B,WAOrB,yBAAKL,UAAU,aACb,yBAAKA,UAAU,OACZ,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAgB,kBAAC,IAAD,CAAM4B,GAAG,SAAT,SAChB,kBAAC,IAAD,CAAgBQ,QAAM,GAAtB,SAED,yBAAKpC,UAAU,UACb,oCACA,+BAGN,yBAAKA,UAAU,OACbgC,K,eC7DTK,EAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAC/BC,EAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IACvDC,EAAY,SAACD,GAAD,OAAS,SAACH,GAAD,OAAUA,GAASA,EAAIC,QAAUE,IACtDE,EAAW,SAACL,GAAD,OAAUM,MAAMC,OAAOP,KAClCQ,EAAa,SAACR,GAAD,MAAS,4CAA4CS,KAAKT,IAqM9DU,E,kDA/LX,WAAYhC,GAAO,IAAD,8BACd,cAAMA,IAEDiC,aAAe,EAAKA,aAAaC,KAAlB,gBAHN,E,yDAQLC,GACXC,KAAKpC,MAAMqC,aAAaF,GACvBC,KAAKpC,MAAMsC,sB,+BAKL,IAAD,OACJ,OACA,yBAAKtD,UAAU,aACb,yBAAKA,UAAU,OACT,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAgB,kBAAC,IAAD,CAAM4B,GAAG,SAAT,SAChB,kBAAC,IAAD,CAAgBQ,QAAM,GAAtB,eAED,yBAAKpC,UAAU,UACb,0CACA,+BAGP,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,UACf,qDAEA,yBAAKA,UAAU,+BACP,2CACA,6DACyB,6BADzB,2BAEwB,6BAFxB,YAGS,6BACT,uBAAGA,UAAU,gBAJb,mBAI+C,6BAC/C,uBAAGA,UAAU,cALb,mBAK6C,6BAC7C,uBAAGA,UAAU,mBANb,KAMoC,uBAAGuD,KAAK,6BAAR,wBAG5C,yBAAKvD,UAAU,+BACX,oDAEJ,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,YAAYwD,KAAK,SAC5B,uBAAGA,KAAK,SAASxD,UAAU,kBAAkBuD,KAAK,oBAAmB,uBAAGvD,UAAU,gBAAlF,SACA,uBAAGwD,KAAK,SAASxD,UAAU,gBAAe,uBAAGA,UAAU,gBAAvD,UACA,uBAAGwD,KAAK,SAASxD,UAAU,kBAAkBuD,KAAK,6BAA4B,uBAAGvD,UAAU,qBAA3F,aAIZ,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,UACZ,sDAEH,yBAAKA,UAAU,mBACb,kBAAC,OAAD,CAAMyD,MAAM,WAAWC,SAAU,SAACP,GAAD,OAAY,EAAKF,aAAaE,KAC9D,kBAAC,IAAD,CAAKnD,UAAU,cACZ,kBAAC,IAAD,CAAO2D,QAAQ,YAAYC,GAAI,GAA/B,cACA,kBAAC,IAAD,CAAKA,GAAI,IACN,kBAAC,UAAQC,KAAT,CAAcJ,MAAM,aAAa5B,GAAG,YAAYjB,KAAK,YACnDkD,YAAY,aACZ9D,UAAU,eACV+D,WAAY,CACT1B,WAASK,UAAWA,EAAU,GAAGF,UAAWA,EAAU,OAGzD,kBAAC,SAAD,CACCxC,UAAU,cACVyD,MAAM,aACNO,KAAK,UACLC,SAAU,CACR5B,SAAU,aACVK,UAAW,sCACXF,UAAW,uCAMtB,kBAAC,IAAD,CAAKxC,UAAU,cACZ,kBAAC,IAAD,CAAO2D,QAAQ,WAAWC,GAAI,GAA9B,aACA,kBAAC,IAAD,CAAKA,GAAI,IACN,kBAAC,UAAQC,KAAT,CAAcJ,MAAM,YAAY5B,GAAG,WAAWjB,KAAK,WACjDkD,YAAY,YACZ9D,UAAU,eACV+D,WAAY,CACT1B,WAASK,UAAWA,EAAU,GAAGF,UAAWA,EAAU,OAGxD,kBAAC,SAAD,CACAxC,UAAU,cACVyD,MAAM,YACNO,KAAK,UACLC,SAAU,CACR5B,SAAU,aACVK,UAAW,sCACXF,UAAW,uCAKtB,kBAAC,IAAD,CAAKxC,UAAU,cACZ,kBAAC,IAAD,CAAO2D,QAAQ,SAASC,GAAI,GAA5B,gBACA,kBAAC,IAAD,CAAKA,GAAI,IACN,kBAAC,UAAQC,KAAT,CAAcJ,MAAM,UAAU5B,GAAG,SAASjB,KAAK,SAC7CkD,YAAY,cACZ9D,UAAU,eACV+D,WAAY,CACT1B,WAASK,UAAWA,EAAU,GAAGF,UAAWA,EAAU,IAAIG,cAG5D,kBAAC,SAAD,CACA3C,UAAU,cACVyD,MAAM,UACNO,KAAK,UACLC,SAAU,CACR5B,SAAU,aACVK,UAAW,mCACXF,UAAW,+BACXG,SAAU,yBAKrB,kBAAC,IAAD,CAAK3C,UAAU,cACZ,kBAAC,IAAD,CAAO2D,QAAQ,QAAQC,GAAI,GAA3B,SACA,kBAAC,IAAD,CAAKA,GAAI,IACN,kBAAC,UAAQC,KAAT,CAAcJ,MAAM,SAAS5B,GAAG,QAAQjB,KAAK,QAC3CkD,YAAY,QACZ9D,UAAU,eACV+D,WAAY,CACT1B,WAAUS,gBAGZ,kBAAC,SAAD,CACA9C,UAAU,cACVyD,MAAM,SACNO,KAAK,UACLC,SAAU,CACR5B,SAAU,aACVS,WAAY,6BAKvB,kBAAC,IAAD,CAAK9C,UAAU,cACb,kBAAC,IAAD,CAAK4D,GAAI,CAACM,KAAM,EAAGC,OAAQ,IACxB,yBAAKnE,UAAU,cACb,kBAAC,IAAD,CAAOoE,OAAK,GACV,kBAAC,UAAQC,SAAT,CAAkBZ,MAAM,SAAS7C,KAAK,QACpCZ,UAAU,qBAFd,IAEqC,IACjC,0DAIT,kBAAC,IAAD,CAAK4D,GAAI,CAACM,KAAM,EAAGC,OAAQ,IACzB,kBAAC,UAAQG,OAAT,CAAgBb,MAAM,eAAe7C,KAAK,cACxCZ,UAAU,gBACV,wCACA,4CAIN,kBAAC,IAAD,CAAKA,UAAU,cACZ,kBAAC,IAAD,CAAO2D,QAAQ,UAAUC,GAAI,GAA7B,iBACA,kBAAC,IAAD,CAAKA,GAAI,IACN,kBAAC,UAAQW,SAAT,CAAkBd,MAAM,WAAW5B,GAAG,UAAUjB,KAAK,UACnD4D,KAAK,KACLxE,UAAU,mBAGlB,kBAAC,IAAD,CAAKA,UAAU,cACZ,kBAAC,IAAD,CAAK4D,GAAI,CAACM,KAAK,GAAIC,OAAQ,IACzB,kBAAC,IAAD,CAAQM,KAAK,SAASC,MAAM,WAA5B,2B,GAnLAC,aCNtB,SAASC,EAAT,GAAkD,IAA3BzE,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,QACxBwE,EAAU1E,EAAK+B,KAAI,SAACX,GAC5B,OACI,kBAAC,OAAD,CAAMjB,IAAE,GACR,yBAAK6B,IAAKZ,EAAOM,IACrB,kBAAC,IAAD,CAAOiD,IAAI,MACP,kBAAC,IAAD,CAAOC,MAAI,EAACC,QAAM,GAChB,kBAAC,IAAD,CAAOC,QAAM,EAACxE,IAAKR,EAAUsB,EAAOb,MAAOC,IAAKY,EAAOX,QAEzD,kBAAC,IAAD,CAAOsE,MAAI,EAAClF,UAAU,QAClB,kBAAC,IAAD,CAAOmF,SAAO,GAAE5D,EAAOX,MACpBW,EAAOV,YAAc,2BAAIU,EAAOV,aAAkB,KACrD,2BAAIU,EAAOT,oBAQvB,OAAIV,EAEG,kBAAC,EAAD,MAGGC,EAEJ,4BAAKA,GAKP,6BACA,kBAAC,UAAD,CAASC,IAAE,GACRuE,IA0EIO,MApEf,SAAepE,GAEX,OACI,yBAAKhB,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KAAgB,kBAAC,IAAD,CAAM4B,GAAG,SAAT,SAChB,kBAAC,IAAD,CAAgBQ,QAAM,GAAtB,aAEJ,yBAAKpC,UAAU,UACX,wCACA,+BAGR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,mBACX,2CACA,waACA,6EAAkD,8CAAlD,iIAEJ,yBAAKA,UAAU,mBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAYA,UAAU,yBAAtB,qBACA,kBAAC,IAAD,KACI,wBAAIA,UAAU,WACV,wBAAIA,UAAU,SAAd,WACA,wBAAIA,UAAU,SAAd,eACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,wBACA,wBAAIA,UAAU,SAAd,cACA,wBAAIA,UAAU,SAAd,aACA,wBAAIA,UAAU,SAAd,UAKhB,yBAAKA,UAAU,UACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUA,UAAU,YAChB,gCAAYA,UAAU,cAClB,uBAAGA,UAAU,QAAb,qFAEA,4BAAQA,UAAU,qBAAlB,cACA,0BAAMqF,MAAM,gBAAZ,0EAQpB,yBAAKrF,UAAU,mBACX,yBAAKA,UAAU,UACX,qDAEJ,yBAAKA,UAAU,UACX,kBAAC,IAAD,CAAOsF,MAAI,GACP,kBAACV,EAAD,CAAczE,KAAQa,EAAMO,OAC5BnB,UAAWY,EAAMQ,eACjBnB,QAASW,EAAMS,sBCpGhCY,EAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAChCC,EAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAWA,GAASA,EAAIC,QAAUE,IAGtD8C,E,kDAEL,WAAYvE,GAAO,IAAD,8BACjB,cAAMA,IACDwE,MAAM,CACVC,aAAa,GAEd,EAAKC,YAAc,EAAKA,YAAYxC,KAAjB,gBACnB,EAAKD,aAAe,EAAKA,aAAaC,KAAlB,gBANH,E,0DAUdE,KAAKuC,SAAS,CACZF,aAAcrC,KAAKoC,MAAMC,gB,mCAIhBtC,GACXC,KAAKsC,cACLtC,KAAKpC,MAAM4E,YAAYxC,KAAKpC,MAAM6E,OAAO1C,EAAO2C,OAAO3C,EAAO4C,OAAO5C,EAAO6C,W,+BAIvE,IAzBQvD,EAyBT,OAGN,OACM,kBAAC,IAAMwD,SAAP,KACD,kBAAC,IAAD,CAAQC,SAAO,EAACvE,QAASyB,KAAKsC,aACxB,0BAAM1F,UAAU,uBADtB,kBAIA,kBAAC,IAAD,CAAOmG,OAAQ/C,KAAKoC,MAAMC,YAAaW,OAAQhD,KAAKsC,aACpD,kBAAC,IAAD,CAAaU,OAAQhD,KAAKsC,aAA1B,kBAGA,kBAAC,IAAD,KAEG,kBAAC,YAAD,CAAWhC,SAAU,SAACP,GAAD,OAAY,EAAKF,aAAaE,KACjD,kBAAC,IAAD,CAAKnD,UAAU,cACf,kBAAC,IAAD,CAAO2D,QAAQ,SAASC,GAAI,IAA5B,UACK,kBAAC,IAAD,CAAKA,GAAI,IACP,kBAAC,UAAQU,OAAT,CAAgBb,MAAM,SAAS7C,KAAK,SAClCZ,UAAU,gBACV,qCACA,qCACA,qCACA,qCACA,wCAIT,kBAAC,IAAD,CAAKA,UAAU,cACZ,kBAAC,IAAD,CAAO2D,QAAQ,SAASC,GAAI,IAA5B,aACA,kBAAC,IAAD,CAAKA,GAAI,IACT,kBAAC,UAAQC,KAAT,CAAcJ,MAAM,UAAU5B,GAAG,SAASjB,KAAK,SAASkD,YAAY,YACnE9D,UAAU,eACH+D,WAAY,CACT1B,WAASK,WA5DlBD,EA4DuC,EA5D/B,SAACH,GAAD,OAAUA,GAASA,EAAIC,QAAUE,IA4DCD,UAAWA,EAAU,OAEhE,kBAAC,SAAD,CACQxC,UAAU,cACVyD,MAAM,UACNO,KAAK,UACLC,SAAU,CACR5B,SAAU,aACVK,UAAW,sCACXF,UAAW,uCAKxB,kBAAC,IAAD,CAAKxC,UAAU,cACV,kBAAC,IAAD,CAAO2D,QAAQ,UAAUC,GAAI,IAA7B,WACA,kBAAC,IAAD,CAAKA,GAAI,IACN,kBAAC,UAAQW,SAAT,CAAkBd,MAAM,WAAW5B,GAAG,UAAUjB,KAAK,UACnD4D,KAAK,IACLxE,UAAU,mBAIrB,kBAAC,IAAD,CAAQyE,KAAK,SAAS4B,MAAM,SAAS3B,MAAO,WAA5C,kB,GAjFaC,aA2FzB,SAAS2B,EAAT,GAA6B,IAARrF,EAAO,EAAPA,KACnB,OAAY,MAARA,EAEA,yBAAKjB,UAAU,uBACf,kBAAC,gBAAD,CAAeM,IAAE,EAChBC,eAAgB,CACZC,cAAe,+BAElB,kBAAC,IAAD,CAAM2B,IAAKlB,EAAKY,IACd,kBAAC,IAAD,CAASC,MAAM,OAAOrB,IAAKR,EAAUgB,EAAKP,MAAOC,IAAKM,EAAKL,OAC3D,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAYK,EAAKL,MACjB,kBAAC,IAAD,KAAWK,EAAKH,iBAOjB,8BAIX,SAASyF,EAAT,GAA0D,IAAjCC,EAAgC,EAAhCA,SAAUZ,EAAsB,EAAtBA,YAAaC,EAAS,EAATA,OAExCY,EAAOD,EAAStE,KAAI,SAAA8D,GACxB,OACF,kBAAC,OAAD,CAAM1F,IAAE,GACN,kBAAC,IAAM2F,SAAP,KACC,wBAAI9D,IAAK6D,EAAQnE,IACd,2BAAImE,EAAQA,SACZ,iCACMA,EAAQD,OADd,IAEG,IAAIW,KAAKC,eAAe,QAAS,CAChCC,KAAM,UACNC,MAAO,QACPC,IAAK,YACJC,OAAO,IAAIC,KAAKA,KAAKC,MAAMjB,EAAQkB,eAU9C,OAAgB,MAAZV,EAEA,yBAAKxG,UAAU,uBACb,wCAEA,wBAAIA,UAAU,iBACd,kBAAC,UAAD,CAASM,IAAE,GACVmG,IAGD,kBAAC,EAAD,CAAaZ,OAAQA,EAAQD,YAAaA,KAKvC,8BAIX,IAmDeuB,EAnDG,SAACnG,GACjB,OAAIA,EAAMZ,UAEJ,yBAAKJ,UAAU,aACb,yBAAKA,UAAU,OACb,kBAAC,EAAD,QAMDgB,EAAMX,QAET,yBAAKL,UAAU,aACb,yBAAKA,UAAU,OACb,4BAAKgB,EAAMX,WAMC,MAAdW,EAAMC,KAEZ,yBAAKjB,UAAU,aACd,yBAAKA,UAAU,OACN,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAgB,kBAAC,IAAD,CAAM4B,GAAG,SAAT,SAEhB,kBAAC,IAAD,CAAgBQ,QAAM,GAAEpB,EAAMC,KAAKL,OAEpC,yBAAKZ,UAAU,UACb,4BAAKgB,EAAMC,KAAKL,MAChB,+BAGX,yBAAKZ,UAAU,OACX,kBAACsG,EAAD,CAAYrF,KAAMD,EAAMC,OACxB,kBAACsF,EAAD,CAAgBC,SAAUxF,EAAMwF,SAC7BZ,YAAa5E,EAAM4E,YACnBC,OAAQ7E,EAAMC,KAAKY,OAOtB,+BC5FGuF,E,kDAnHb,WAAYpG,GAAO,IAAD,8BAChB,cAAMA,IACDwE,MAAM,CACT6B,WAAW,EACX5B,aAAa,GAEf,EAAK6B,UAAY,EAAKA,UAAUpE,KAAf,gBACjB,EAAKwC,YAAc,EAAKA,YAAYxC,KAAjB,gBACnB,EAAKqE,YAAc,EAAKA,YAAYrE,KAAjB,gBARH,E,wDAYfE,KAAKuC,SAAS,CACX0B,WAAYjE,KAAKoC,MAAM6B,c,oCAKzBjE,KAAKuC,SAAS,CACZF,aAAcrC,KAAKoC,MAAMC,gB,kCAInB+B,GACVpE,KAAKsC,cACL+B,MAAM,aAAerE,KAAKsE,SAASrB,MAAQ,cAAgBjD,KAAKuE,SAAStB,MACrE,cAAgBjD,KAAKwE,SAASC,SAClCL,EAAMM,mB,+BAGE,IAAD,OACP,OACA,kBAAC,IAAM7B,SAAP,KACE,kBAAC,IAAD,CAAQ8B,MAAI,EAACC,OAAO,MAClB,yBAAKhI,UAAU,aACf,kBAAC,IAAD,CAAe2B,QAASyB,KAAKkE,YACzB,kBAAC,IAAD,CAAatH,UAAU,UAAUuD,KAAK,KACnC,yBAAK9C,IAAI,yBAAyBwH,OAAO,KAAKnG,MAAM,KACnDnB,IAAI,2BAER,kBAAC,IAAD,CAAUwF,OAAQ/C,KAAKoC,MAAM6B,UAAWa,QAAM,GAC9C,kBAAC,IAAD,CAAKA,QAAM,GACT,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASlI,UAAU,WAAW4B,GAAG,SAC/B,0BAAM5B,UAAU,qBADlB,UAIF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASA,UAAU,WAAW4B,GAAG,YAC/B,0BAAM5B,UAAU,qBADlB,aAIF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASA,UAAU,WAAW4B,GAAG,SAC/B,0BAAM5B,UAAU,qBADlB,UAIF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASA,UAAU,WAAW4B,GAAG,cAC/B,0BAAM5B,UAAU,6BADlB,gBAKJ,kBAAC,IAAD,CAAKA,UAAU,UAAUkI,QAAM,GAC/B,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAQhC,SAAO,EAACvE,QAASyB,KAAKsC,aAC9B,0BAAM1F,UAAU,wBADhB,eAQT,kBAAC,IAAD,KACK,yBAAKA,UAAU,aACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,mBACX,qDACA,yLAKhB,kBAAC,IAAD,CAAOmG,OAAQ/C,KAAKoC,MAAMC,YAAaW,OAAQhD,KAAKsC,aAClD,kBAAC,IAAD,CAAaU,OAAQhD,KAAKsC,aAA1B,SAGA,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAMhC,SAAUN,KAAKmE,aACnB,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAO5D,QAAQ,YAAf,YACA,kBAAC,IAAD,CAAOc,KAAK,OAAO5C,GAAG,WAAWjB,KAAK,WACrCuH,SAAU,SAACC,GAAD,OAAW,EAAKV,SAAWU,MAEzC,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAOzE,QAAQ,YAAf,YACA,kBAAC,IAAD,CAAOc,KAAK,WAAW5C,GAAG,WAAWjB,KAAK,WAC1CuH,SAAU,SAACC,GAAD,OAAW,EAAKT,SAAWS,MAExC,kBAAC,IAAD,CAAWhE,OAAK,GACb,kBAAC,IAAD,CAAOA,OAAK,GACV,kBAAC,IAAD,CAAOK,KAAK,WAAW7D,KAAK,WAC5BuH,SAAU,SAACC,GAAD,OAAW,EAAKR,SAAWQ,KAFvC,gBAMH,kBAAC,IAAD,CAAQ3D,KAAK,SAAS4B,MAAM,SAAS3B,MAAO,WAA5C,iB,GA5GOC,aC4CN0D,MA/Cf,SAAgBrH,GACZ,OACA,yBAAKhB,UAAU,UACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,2BACX,qCACA,wBAAIA,UAAU,iBACV,4BAAI,kBAAC,IAAD,CAAM4B,GAAG,SAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,YAAT,aACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,SAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,cAAT,iBAGZ,yBAAK5B,UAAU,kBACX,2CACA,6DACqB,6BADrB,2BAEoB,6BAFpB,YAGK,6BACT,uBAAGA,UAAU,sBAJT,mBAIiD,6BACrD,uBAAGA,UAAU,oBALT,mBAK+C,6BACnD,uBAAGA,UAAU,yBANT,KAMsC,uBAAGuD,KAAK,6BAAR,wBAI1C,yBAAKvD,UAAU,qCACX,yBAAKA,UAAU,eACX,uBAAGA,UAAU,iCAAiCuD,KAAK,uBAAsB,uBAAGvD,UAAU,uBACrF,uBAAGA,UAAU,mCAAmCuD,KAAK,2CAA0C,uBAAGvD,UAAU,oBAC7G,uBAAGA,UAAU,mCAAmCuD,KAAK,+BAA8B,uBAAGvD,UAAU,oBAChG,uBAAGA,UAAU,kCAAkCuD,KAAK,uBAAsB,uBAAGvD,UAAU,mBACvF,uBAAGA,UAAU,iCAAiCuD,KAAK,uBAAsB,uBAAGvD,UAAU,mBACtF,uBAAGA,UAAU,sBAAsBuD,KAAK,WAAU,uBAAGvD,UAAU,yBAI3E,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,YACX,6E,QC8DPkB,EAAgB,iBAAO,CACnCuD,KCxG6B,mBD2GjB6D,EAAe,SAACC,GAAD,MAAc,CACzC9D,KC3G4B,gBD4G5B+D,QAASD,IAGGE,EAAY,SAACxG,GAAD,MAAa,CACrCwC,KC/GyB,aDgHzB+D,QAASvG,IAwBGyG,EAAiB,SAACH,GAAD,MAAc,CAC3C9D,KCvI8B,kBDwI9B+D,QAASD,IAGGI,EAAc,SAACnC,GAAD,MAAe,CACzC/B,KC7I2B,eD8I3B+D,QAAShC,IA0BGnF,EAAgB,iBAAO,CACnCoD,KCvK6B,mBD0KjBmE,EAAe,SAACL,GAAD,MAAc,CACzC9D,KCzK4B,gBD0K5B+D,QAASD,IAGGM,EAAY,SAACC,GAAD,MAAa,CACrCrE,KC/KyB,aDgLzB+D,QAASM,IA0BGtH,EAAiB,iBAAO,CACjCiD,KCzM2B,oBD4MlBsE,EAAgB,SAACR,GAAD,MAAc,CACvC9D,KC3M0B,iBD4M1B+D,QAASD,IAGAS,EAAa,SAACnE,GAAD,MAAc,CACpCJ,KCjNuB,cDkNvB+D,QAAS3D,I,QE3LPoE,E,kLAGF7F,KAAKpC,MAAMkI,cACX9F,KAAKpC,MAAMmI,gBACX/F,KAAKpC,MAAMoI,cACXhG,KAAKpC,MAAMqI,iB,+BAKL,IAAD,OAsCP,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,kBAAD,KACA,kBAAC,gBAAD,CAAelH,IAAKiB,KAAKpC,MAAMsI,SAASnH,IAAKoH,WAAW,OAAOC,QAAS,KACxE,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAOC,KAAK,QAAQC,UA1CV,WACf,OACI,kBAAC,EAAD,CAAMzI,KAAM,EAAKD,MAAMiB,OAAOA,OAAO0H,QAAO,SAAC1I,GAAD,OAAUA,EAAK2I,YAAU,GAC/D1I,cAAe,EAAKF,MAAMiB,OAAO7B,UACjCe,cAAe,EAAKH,MAAMiB,OAAO5B,QACnCe,UAAW,EAAKJ,MAAM6I,WAAWA,WAAWF,QAAO,SAACG,GAAD,OAAWA,EAAMF,YAAU,GAC5EvI,cAAe,EAAKL,MAAM6I,WAAWzJ,UACrCkB,cAAe,EAAKN,MAAM6I,WAAWxJ,QACvCkB,OAAQ,EAAKP,MAAM6D,QAAQA,QAAQ8E,QAAO,SAACpI,GAAD,OAAYA,EAAOqI,YAAU,GACvEpI,eAAgB,EAAKR,MAAM6D,QAAQzE,UACjCqB,eAAgB,EAAKT,MAAM6D,QAAQxE,aAiCxC,kBAAC,IAAD,CAAO0J,OAAK,EAACN,KAAK,QAAQC,UAAW,kBAAM,kBAAC,EAAD,CAAMzH,OAAQ,EAAKjB,MAAMiB,YACpE,kBAAC,IAAD,CAAOwH,KAAK,gBAAgBC,UApBd,SAAC,GAAa,IAAZM,EAAW,EAAXA,MACpB,OACE,kBAAC,EAAD,CAAY/I,KAAM,EAAKD,MAAMiB,OAAOA,OAAO0H,QAAO,SAAC1I,GAAD,OAAUA,EAAKY,KAAOoI,SAASD,EAAME,OAAOrE,OAAO,OAAK,GACzGzF,UAAW,EAAKY,MAAMiB,OAAO7B,UAC5BC,QAAS,EAAKW,MAAMiB,OAAO5B,QAC5BmG,SAAU,EAAKxF,MAAMwF,SAASA,SAASmD,QAAO,SAAC3D,GAAD,OAAaA,EAAQH,SAAWoE,SAASD,EAAME,OAAOrE,OAAO,OAC3GsE,gBAAiB,EAAKnJ,MAAMwF,SAASnG,QACrCuF,YAAa,EAAK5E,MAAM4E,iBAcvB,kBAAC,IAAD,CAAOmE,OAAK,EAACN,KAAK,aAAaC,UAAW,kBAAM,kBAAC,EAAD,CAASpG,kBAAmB,EAAKtC,MAAMsC,kBAAmBD,aAAc,EAAKrC,MAAMqC,kBACnI,kBAAC,IAAD,CAAO0G,OAAK,EAACN,KAAK,WAAWC,UA/BlB,WAChB,OACK,kBAAC,EAAD,CAAQnI,OAAQ,EAAKP,MAAM6D,QAAQA,QACnCzE,UAAW,EAAKY,MAAM6D,QAAQzE,UAC9BC,QAAS,EAAKW,MAAM6D,QAAQxE,aA4B5B,kBAAC,IAAD,CAAUuB,GAAG,aAIhB,kBAAC,EAAD,W,GAhEa+C,aAsEJyF,cAAWC,mBAzFD,SAAA7E,GACvB,MAAO,CACJvD,OAAQuD,EAAMvD,OACduE,SAAUhB,EAAMgB,SAChBqD,WAAYrE,EAAMqE,WAClBhF,QAASW,EAAMX,YAIQ,SAACyF,GAAD,MAAe,CACzC1E,YAAa,SAACC,EAAQC,EAAQC,EAAQC,GAAzB,OAAqCsE,EFhBzB,SAACzE,EAAQC,EAAQC,EAAQC,GAAzB,OAAqC,SAACsE,GAE9D,IAAMC,EAAY,CACjB1E,OAAQA,EACRC,OAAQA,EACRC,OAAQA,EACRC,QAASA,GAIV,OAFAuE,EAAWrD,MAAO,IAAIF,MAAOwD,cAEtBC,MAAMxK,EAAU,WAAW,CACjCyK,OAAQ,OACRxF,KAAMyF,KAAKC,UAAUL,GACrBM,QAAU,CACN,eAAgB,oBAEpBC,YAAa,gBAGZC,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGb,SAAAA,GAEG,MADc,IAAIC,MAAMD,EAAMI,YAGjCP,MAAK,SAAAC,GAAQ,OAAIA,EAASO,UAC1BR,MAAK,SAAAC,GAAQ,OAAIV,EAvCI,SAACtE,GAAD,MAAc,CACpCvB,KCJuB,cDKvB+D,QAASxC,GAqCkBwF,CAAWR,OACrCS,OAAM,SAAAP,GAAWQ,QAAQC,IAAI,iBAAiBT,EAAMI,SAClD7D,MAAM,4CAA8CyD,EAAMI,aEpBJ1F,CAAYC,EAAQC,EAAQC,EAAQC,KAC/FkD,YAAa,WAAOoB,GFwDW,SAACA,GAE9B,OADHA,EAASpJ,GAAc,IACbuJ,MAAMxK,EAAU,UACtB8K,MAAK,SAAAC,GACL,GAAIA,EAASC,GACZ,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGP,SAAAA,GAEC,MADc,IAAIC,MAAMD,EAAMI,YAI/BP,MAAK,SAAAC,GAAQ,OAAIA,EAASO,UAC1BR,MAAK,SAAA9I,GAAM,OAAIqI,EAAS7B,EAAUxG,OAClCwJ,OAAM,SAAAP,GAAK,OAAIZ,EAAShC,EAAa4C,EAAMI,iBE3E9ChI,kBAAmB,WAAQgH,EAASsB,UAAQC,MAAM,cAClD1C,cAAe,WAAOmB,GF2FW,SAACA,GAChC,OAAOG,MAAMxK,EAAU,YACtB8K,MAAK,SAAAC,GACL,GAAIA,EAASC,GACZ,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAM,QAAUH,EAASI,OAAS,KAAOJ,EAASK,YAElE,MADAH,EAAMF,SAAWA,EACXE,KAGP,SAAAA,GAEC,MADc,IAAIC,MAAMD,EAAMI,YAG/BP,MAAK,SAAAC,GAAQ,OAAIA,EAASO,UAC1BR,MAAK,SAAAvE,GAAQ,OAAI8D,EAAS3B,EAAYnC,OACtCiF,OAAM,SAAAP,GAAK,OAAIZ,EAAS5B,EAAewC,EAAMI,iBE5GhDlC,YAAa,WAAOkB,GFyHW,SAACA,GAG9B,OAFHA,EAASjJ,GAAc,IAEboJ,MAAMxK,EAAU,cACtB8K,MAAK,SAAAC,GACL,GAAIA,EAASC,GACZ,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAM,QAAUH,EAASI,OAAS,IAAMJ,EAASK,YAEjE,MADAH,EAAMF,SAAWA,EACXE,KAGP,SAAAA,GAEC,MADc,IAAIC,MAAMD,EAAMI,YAG/BP,MAAK,SAAAC,GAAQ,OAAIA,EAASO,UAC1BR,MAAK,SAAAjC,GAAM,OAAIwB,EAASzB,EAAUC,OAClC2C,OAAM,SAAAP,GAAK,OAAIZ,EAAS1B,EAAasC,EAAMI,iBE5I9CjC,aAAc,WAAOiB,GF6JW,SAACA,GAG/B,OAFAA,EAAS9I,GAAe,IAEjBiJ,MAAMxK,EAAU,WACtB8K,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAM,QAAUH,EAASI,OAAS,IAAMJ,EAASK,YAEjE,MADAH,EAAMF,SAAWA,EACXE,KAGb,SAAAA,GAEG,MADc,IAAIC,MAAMD,EAAMI,YAGjCP,MAAK,SAAAC,GAAQ,OAAIA,EAASO,UAC1BR,MAAK,SAAAjC,GAAM,OAAIwB,EAAStB,EAAWF,OACnC2C,OAAM,SAAAP,GAAK,OAAIZ,EAASvB,EAAcmC,EAAMI,iBEhL/CjI,aAAc,SAACyI,GAAD,OAAcxB,EFkBF,SAACwB,GAAD,OAAc,SAACxB,GAGxC,OAAOG,MAAMxK,EAAU,WAAW,CACjCyK,OAAQ,OACRxF,KAAMyF,KAAKC,UAAUkB,GACrBjB,QAAU,CACN,eAAgB,oBAEpBC,YAAa,gBAGZC,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAGP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGb,SAAAA,GAEG,MADc,IAAIC,MAAMD,EAAMI,YAGjCP,MAAK,SAAAC,GAAQ,OAAIA,EAASO,UAC1BR,MAAK,SAAAe,GAAQ,OAAIrE,MAAMkD,KAAKC,UAAUkB,OACtCL,OAAM,SAAAP,GAAWQ,QAAQC,IAAI,iBAAiBT,EAAMI,SAClD7D,MAAM,6CAA+CyD,EAAMI,aE/C3BjI,CAAayI,QAyE1BzB,CAA6CpB,I,0BCrG1D8C,GAAS,WAIG,IAJFvG,EAIC,uDAJO,CACnBpF,WAAW,EACXC,QAAS,KACT4B,OAAQ,IACP+J,EAAW,uCACvB,OAAOA,EAAOvH,MACb,IFLwB,aEMpB,OAAO,eAAIe,EAAX,CAAkBpF,WAAW,EAAOC,QAAS,KAAM4B,OAAQ+J,EAAOxD,UAEtE,IFV4B,iBEWxB,OAAO,eAAIhD,EAAX,CAAkBpF,WAAW,EAAMC,QAAS,KAAM4B,OAAO,KAE7D,IFZ2B,gBEavB,OAAO,eAAIuD,EAAX,CAAkBpF,WAAW,EAAOC,QAAS2L,EAAOxD,QAAUvG,OAAO,KAEzE,QACE,OAAOuD,IChBEyG,GAAW,WAGL,IAHMzG,EAGP,uDAHe,CAChCnF,QAAS,KACTmG,SAAU,IACJwF,EAAW,uCACjB,OAAOA,EAAOvH,MAEb,IHJ0B,eGKtB,OAAO,eAAIe,EAAX,CAAkBpF,WAAW,EAAOC,QAAS,KAAMmG,SAAUwF,EAAOxD,UAElE,IHNuB,kBGOzB,OAAO,eAAIhD,EAAX,CAAkBpF,WAAW,EAAOC,QAAS2L,EAAOxD,QAAUhC,SAAS,KAG3E,IHfyB,cGgBhB,IAAIR,EAAUgG,EAAOxD,QACrB,OAAO,eAAIhD,EAAX,CAAmBgB,SAAUhB,EAAMgB,SAAS0F,OAAOlG,KAE3D,QACC,OAAOR,IClBE2G,GAAa,WAID,IAJE3G,EAIH,uDAJW,CACvBpF,WAAW,EACXC,QAAS,KACTwJ,WAAY,IACXmC,EAAW,uCACvB,OAAOA,EAAOvH,MAEL,IJFgB,aIGpB,OAAO,eAAIe,EAAX,CAAkBpF,WAAW,EAAOC,QAAS,KAAMwJ,WAAYmC,EAAOxD,UAE1E,IJN4B,iBIOxB,OAAO,eAAIhD,EAAX,CAAkBpF,WAAW,EAAMC,QAAS,KAAMwJ,WAAW,KAEjE,IJP2B,gBIQvB,OAAO,eAAIrE,EAAX,CAAkBpF,WAAW,EAAOC,QAAS2L,EAAOxD,QAAUqB,WAAW,KAE7E,QACE,OAAOrE,ICjBE4G,GAAU,WAIE,IAJD5G,EAIA,uDAJQ,CACpBpF,WAAW,EACXC,QAAS,KACTwE,QAAS,IACRmH,EAAW,uCACvB,OAAOA,EAAOvH,MAEL,ILCiB,cKArB,OAAO,eAAIe,EAAX,CAAkBpF,WAAW,EAAOC,QAAS,KAAMwE,QAASmH,EAAOxD,UAEvE,ILH6B,kBKIzB,OAAO,eAAIhD,EAAX,CAAkBpF,WAAW,EAAMC,QAAS,KAAMwE,QAAQ,KAE9D,ILJ4B,iBKKxB,OAAO,eAAIW,EAAX,CAAkBpF,WAAW,EAAOC,QAAS2L,EAAOxD,QAAU3D,QAAQ,KAE1E,QACE,OAAOW,I,wCCnBE6G,GAAkB,CAC9BC,UAAW,GACXC,SAAU,GACVC,OAAQ,GACRC,MAAO,GACPC,OAAO,EACPC,YAAa,OACbrB,QAAS,ICAJsB,GCKSC,uBACbC,2BAAgB,aACf7K,OAAO8J,GACPvF,SAAUyF,GACVpC,WAAYsC,GACZtH,QAASuH,IACNW,sBAAY,CACdjB,SAAUO,OAGZW,2BAAgBC,KAAMC,ODGTC,G,uKAbb,OACC,kBAAC,WAAD,CAAUP,MAAOA,IAChB,kBAAC,IAAD,KACA,6BAEE,kBAAC,EAAD,a,GARYjI,aEGEyI,QACW,cAA7BC,OAAO/D,SAASgE,UAEe,UAA7BD,OAAO/D,SAASgE,UAEhBD,OAAO/D,SAASgE,SAAStD,MACvB,2DCTNuD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/C,MAAK,SAAAgD,GACJA,EAAaC,gBAEdvC,OAAM,SAAAP,GACLQ,QAAQR,MAAMA,EAAMI,a","file":"static/js/main.065289f3.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => {\n\treturn(\n         <div className=\"col-12\">\n           <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n           <p>Loading . . .</p>\n         </div>\n\t\t);\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform } from 'react-animation-components';\n\nfunction RenderCard({item, isLoading, errMess}){\n     if (isLoading) {\n      return (\n           <Loading />\n        );\n     }\n     else if (errMess) {\n      return(\n          <h4>{errMess}</h4>\n        );\n     }\n     else\n      \treturn(\n      <FadeTransform in\n         transformProps={{\n             exitTransform: 'scale(0.5) translateY(-50)'\n         }}>\n          <Card>\n            <CardImg src={baseUrl + item.image} alt={item.name} />\n            <CardBody>\n              <CardTitle>{item.name}</CardTitle>\n                {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle>: null}\n                <CardText>{item.description}</CardText>\n            </CardBody>\n          </Card>\n      </FadeTransform>\n\t\t);\n}\n\nfunction Home(props){\nreturn(\n     <div className=\"container\">\n       <div className=\"row align-items-start\">\n         <div className=\"col-12 col-md m-1\">\n            <RenderCard item= {props.dish}\n            isLoading={props.dishesLoading}\n            errMess={props.dishesErrMess} />\n         </div>\n         <div className=\"col-12 col-md m-1\">\n            <RenderCard item= {props.promotion}\n            isLoading={props.promosLoading}\n            errMess={props.promosErrMess} />\n         </div>\n         <div className=\"col-12 col-md m-1\">\n            <RenderCard item= {props.leader}\n            isLoading={props.leadersLoading}\n            errMess={props.leadersErrMess} />\n         </div>\n       </div>\n     </div>\n\t);\n\n}\n\nexport default Home;","import React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\n\nfunction RenderMenuItem({ dish, onClick}){\n  return(\n       <Card>\n          <Link to= {`/menu/${dish.id}`} >\n             <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n       \n         <CardImgOverlay>\n         <CardTitle>{dish.name}</CardTitle>\n         \n         </CardImgOverlay>\n         </Link>\n       </Card>\n    );\n}\n \n const Menu = (props) =>{\n\n  const menu = props.dishes.dishes.map((dish) => {\n  return (\n       \n     <div key={dish.id} className=\"col-12 col-md-5 m-1\">\n       <RenderMenuItem dish={dish} />\n     </div>\n     \n    );\n        }) ;\n\n    if(props.dishes.isLoading) {\n      return(\n          <div className=\"container\">\n            <div className=\"row\">\n              <Loading />\n            </div>\n          </div>\n        );\n    }\n\n    else if (props.dishes.errMess) {\n          return(\n          <div className=\"container\">\n            <div className=\"row\">\n              <h4>{props.dishes.errMess}</h4>\n            </div>\n          </div>\n        );\n    }\n    else\n       return(\n           <div className=\"container\">\n             <div className=\"row\">\n                <Breadcrumb>\n                  <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                  <BreadcrumbItem active>Menu</BreadcrumbItem>\n                </Breadcrumb>\n                 <div className=\"col-12\">\n                   <h3>Menu</h3>\n                   <hr />\n                 </div>\n             </div>\n             <div className=\"row\">\n              {menu}\n              </div> \n            </div> \n            );\n }\n\n  \nexport default Menu;\n\n\n           \n  \n","import React,{ Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors } from 'react-redux-form';\n\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\n\nclass Contact extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this); \n        \n    }\n\n\n    handleSubmit(values){\n      this.props.postFeedback(values);\n       this.props.resetFeedbackForm();\n      \n    }\n\n\n    render(){\n        return(\n        <div className=\"container\">\n          <div className=\"row\">\n                <Breadcrumb>\n                  <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                  <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                </Breadcrumb>\n                 <div className=\"col-12\">\n                   <h3>Contact Us</h3>\n                   <hr />\n                 </div>\n             </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                <h3>Location Information</h3>\n                </div>\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                        121, Clear Water Bay Road<br />\n                        Clear Water Bay, Kowloon<br />\n                        HONG KONG<br />\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                </div>\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\n                    <h5>Map of our Location</h5>\n                </div>\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\n                    <div className=\"btn-group\" role=\"group\">\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n              <div className=\"col-12\">\n                 <h3>Send us Your Feedback</h3>\n              </div>\n              <div className=\"col-12 col-md-9\">\n                <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                 <Row className=\"form-group\">\n                    <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                    <Col md={10}>\n                       <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                         placeholder=\"First Name\"\n                         className=\"form-control\"\n                         validators={{\n                            required,minLength: minLength(3),maxLength: maxLength(15)\n                         }}\n                         />\n                         <Errors \n                          className=\"text-danger\"\n                          model=\".firstname\"\n                          show=\"touched\"\n                          messages={{\n                            required: 'Required. ',\n                            minLength: 'Must be greater than 2 characters. ',\n                            maxLength: 'Must be 15 characters or less. '\n                        }}\n                         />\n                          \n                    </Col>\n                 </Row>\n                 <Row className=\"form-group\">\n                    <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                    <Col md={10}>\n                       <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                         placeholder=\"Last Name\"\n                         className=\"form-control\"\n                         validators={{\n                            required,minLength: minLength(3),maxLength: maxLength(15)\n                         }}\n                          />\n                          <Errors \n                          className=\"text-danger\"\n                          model=\".lastname\"\n                          show=\"touched\"\n                          messages={{\n                            required: 'Required. ',\n                            minLength: 'Must be greater than 2 characters. ',\n                            maxLength: 'Must be 15 characters or less. '\n                        }}\n                         /> \n                    </Col>\n                 </Row>\n                 <Row className=\"form-group\">\n                    <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                    <Col md={10}>\n                       <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                         placeholder=\"Tel. Number\"\n                         className=\"form-control\"\n                         validators={{\n                            required,minLength: minLength(3),maxLength: maxLength(15),isNumber\n                         }}\n                          />\n                          <Errors \n                          className=\"text-danger\"\n                          model=\".telnum\"\n                          show=\"touched\"\n                          messages={{\n                            required: 'Required. ',\n                            minLength: 'Must be greater than 2 numbers. ',\n                            maxLength: 'Must be 15 numbers or less. ',\n                            isNumber: 'Must be a number.'\n                        }}\n                         /> \n                    </Col>\n                 </Row>\n                 <Row className=\"form-group\">\n                    <Label htmlFor=\"email\" md={2}>Email</Label>\n                    <Col md={10}>\n                       <Control.text model=\".email\" id=\"email\" name=\"email\"\n                         placeholder=\"Email\"\n                         className=\"form-control\"\n                         validators={{\n                            required, validEmail\n                         }}\n                          />\n                          <Errors \n                          className=\"text-danger\"\n                          model=\".email\"\n                          show=\"touched\"\n                          messages={{\n                            required: 'Required. ',\n                            validEmail: 'Invalid Email Address'\n                        }}\n                         /> \n                    </Col>\n                 </Row>\n                 <Row className=\"form-group\">\n                   <Col md={{size: 6, offset: 2}}>\n                      <div className=\"form-check\">\n                        <Label check>\n                          <Control.checkbox model=\".agree\" name=\"agree\"\n                            className=\"form-check-input\" /> {' '}\n                            <strong>May we contact you?</strong>\n                        </Label>\n                      </div>\n                   </Col>\n                   <Col md={{size: 3, offset: 1}}>\n                     <Control.select model=\".contactType\" name=\"contactType\"\n                       className=\"form-control\" >\n                       <option>Tel.</option>\n                       <option>Email</option>\n                     </Control.select>\n                   </Col>\n                 </Row>\n                 <Row className=\"form-group\">\n                    <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                    <Col md={10}>\n                       <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                         rows=\"12\"\n                         className=\"form-control\" /> \n                    </Col>\n                 </Row>\n                 <Row className=\"form-group\">\n                    <Col md={{size:10, offset: 2}}>\n                      <Button type=\"submit\" color=\"primary\">\n                        Send Feedback\n                      </Button>\n                    </Col>\n                 </Row>\n                </Form>\n              </div>\n            </div>\n        </div>\n     );\n }\n    \n}\n\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { Link } from 'react-router-dom';\nimport { Fade, Stagger } from 'react-animation-components';\n\n\nfunction RenderLeader({item, isLoading, errMess}){\n          const leaders = item.map((leader) => {\n        return (\n            <Fade in>\n            <div key={leader.id}>\n        <Media tag=\"li\">\n            <Media left middle>\n              <Media object src={baseUrl + leader.image} alt={leader.name} />\n            </Media>      \n            <Media body className=\"ml-5\">\n                <Media heading>{leader.name}</Media >\n                  {leader.designation ? <p>{leader.designation}</p>: null}\n                <p>{leader.description}</p>\n            </Media>\n            \n        </Media>\n        </div>\n        </Fade>\n        );\n    });\n    if (isLoading) {\n      return (\n           <Loading />\n        );\n     }\n     else if (errMess) {\n      return(\n          <h4>{errMess}</h4>\n        );\n     }\nelse\n    return(\n        <div>\n        <Stagger in>\n          {leaders}\n        </Stagger>\n       </div>\n    );   \n}\n\nfunction About(props) {\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Media list>\n                        <RenderLeader item ={ props.leader }\n                        isLoading={props.leadersLoading}\n                        errMess={props.leadersErrMess}  />\n                    </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import React, {Component} from 'react'\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Label, Button, Col, Row, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\n const required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\n\n class CommentForm extends Component{\n\n  constructor(props){\n   super(props);\n   this.state={\n    isModalOpen: false\n   };\n   this.toggleModal = this.toggleModal.bind(this);\n   this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  toggleModal(){\n      this.setState({\n        isModalOpen: !this.state.isModalOpen\n     });\n  }\n\n    handleSubmit(values){\n      this.toggleModal();\n      this.props.postComment(this.props.dishId,values.rating,values.author,values.comment);\n      \n    }\n\n  render(){\n\n  \n    return(\n          <React.Fragment>\n         <Button outline onClick={this.toggleModal}>\n               <span className=\"fa fa-pencil fa-lg\"></span>\n                Submit Comment\n               </Button>\n         <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal} >\n         <ModalHeader toggle={this.toggleModal} >\n            Submit Comment\n         </ModalHeader>\n         <ModalBody>\n        \n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n              <Row className=\"form-group\">\n              <Label htmlFor=\"author\" md={12}>Rating</Label>\n                   <Col md={12}>\n                     <Control.select model=\"rating\" name=\"rating\"\n                       className=\"form-control\" >\n                       <option>1</option>\n                       <option>2</option>\n                       <option>3</option>\n                       <option>4</option>\n                       <option>5</option>\n                     </Control.select>\n                   </Col>\n                 </Row>\n              <Row className=\"form-group\">\n                 <Label htmlFor=\"author\" md={12}>Your Name</Label>\n                 <Col md={12}>\n                 <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Your Name\"\n                  className=\"form-control\"\n                         validators={{\n                            required,minLength: minLength(3),maxLength: maxLength(15)\n                         }} />\n                  <Errors \n                          className=\"text-danger\"\n                          model=\".author\"\n                          show=\"touched\"\n                          messages={{\n                            required: 'Required. ',\n                            minLength: 'Must be greater than 2 characters. ',\n                            maxLength: 'Must be 15 characters or less. '\n                        }}\n                         />\n                         </Col>\n              </Row>\n               <Row className=\"form-group\">\n                    <Label htmlFor=\"comment\" md={12}>Comment</Label>\n                    <Col md={12}>\n                       <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\n                         rows=\"6\"\n                         className=\"form-control\" /> \n                    </Col>\n                 </Row>\n              \n              <Button type=\"submit\" value=\"submit\" color= \"primary\">Submit</Button>\n            </LocalForm>\n            \n         </ModalBody>\n       </Modal>\n       </React.Fragment>\n      );\n  }\n}\n\n  function RenderDish({dish}) {\n    if (dish != null) {\n      return (\n        <div className=\"col-12 col-md-5 m-1\">\n        <FadeTransform in\n         transformProps={{\n             exitTransform: 'scale(0.5) translateY(-50)'\n         }}>\n          <Card key={dish.id}>\n            <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n            <CardBody>\n              <CardTitle>{dish.name}</CardTitle>\n              <CardText>{dish.description}</CardText>\n            </CardBody>\n          </Card>\n          </FadeTransform>\n        </div>\n      )\n    } else {\n      return <div />\n    }\n  }\n\n  function RenderComments({comments, postComment, dishId}) {\n    \n    const cmts = comments.map(comment => {\n      return (\n    <Fade in>\n      <React.Fragment>\n       <li key={comment.id}>\n          <p>{comment.comment}</p>\n          <p>\n            -- {comment.author},\n            {new Intl.DateTimeFormat('en-US', {\n              year: 'numeric',\n              month: 'short', \n              day: '2-digit'\n            }).format(new Date(Date.parse(comment.date)))}\n          </p>\n          \n        </li>\n      </React.Fragment>\n    </Fade>\n      );\n    })\n     \n\n    if (comments != null) {\n      return (\n        <div className=\"col-12 col-md-5 m-1\">\n          <h4>Comments</h4>\n          \n          <ul className=\"list-unstyled\">\n          <Stagger in>\n          {cmts}\n          </Stagger>\n          </ul>\n          <CommentForm dishId={dishId} postComment={postComment} />\n          \n        </div>\n      )\n    } else {\n      return <div />\n    }\n  }\n\n  const DishDetail =(props) => {\n    if (props.isLoading) {\n      return(\n          <div className=\"container\">\n            <div className=\"row\">\n              <Loading />\n            </div>\n          </div>\n        );\n    }\n\n    else if (props.errMess) {\n          return(\n          <div className=\"container\">\n            <div className=\"row\">\n              <h4>{props.errMess}</h4>\n            </div>\n          </div>\n        );\n    }\n    \n   else if (props.dish != null) \n       return (\n      <div className=\"container\">\n       <div className=\"row\">\n                <Breadcrumb>\n                  <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\n\n                  <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                </Breadcrumb>\n                 <div className=\"col-12\">\n                   <h3>{props.dish.name}</h3>\n                   <hr />\n                 </div>\n             </div>\n        <div className=\"row\">\n            <RenderDish dish={props.dish} />\n            <RenderComments comments={props.comments}\n               postComment={props.postComment}\n               dishId={props.dish.id} />\n\n        </div>\n      </div>\n    );\n    else \n      return(\n            <div></div>\n    );\n   \n  }\n\n  export default DishDetail; \n   ","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler,Collapse, NavItem, Jumbotron,\n        Button, Modal, ModalHeader, ModalBody ,Form ,FormGroup ,Input ,Label} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\n\nclass Header extends Component {\n\n  constructor(props){\n    super(props);\n    this.state={\n      isNavOpen: false,\n      isModalOpen: false\n    };\n    this.toggleNav = this.toggleNav.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n  }\n\n  toggleNav(){\n     this.setState({\n        isNavOpen: !this.state.isNavOpen\n     });\n  }\n\n  toggleModal(){\n      this.setState({\n        isModalOpen: !this.state.isModalOpen\n     });\n  }\n\n  handleLogin(event) {\n    this.toggleModal();\n    alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\n      + \" Remember: \" + this.remember.checked);\n    event.preventDefault();\n  }\n\n  render() {\n    return(\n    <React.Fragment>\n      <Navbar dark expand=\"md\">\n        <div className=\"container\">\n        <NavbarToggler onClick={this.toggleNav} />\n            <NavbarBrand className=\"mr-auto\" href=\"/\">\n               <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" \n                alt=\"Ristorante Con Fusion\" />\n            </NavbarBrand>\n            <Collapse isOpen={this.state.isNavOpen} navbar>\n            <Nav navbar>\n              <NavItem>\n                <NavLink className=\"nav-link\" to=\"/home\">\n                  <span className=\"fa fa-home fa-lg\"></span> Home\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink className=\"nav-link\" to=\"/aboutus\">\n                  <span className=\"fa fa-info fa-lg\"></span> Aboutus\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink className=\"nav-link\" to=\"/menu\">\n                  <span className=\"fa fa-list fa-lg\"></span> Menu\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink className=\"nav-link\" to=\"/contactus\">\n                  <span className=\"fa fa-address-card fa-lg\"></span> ContactUs\n                </NavLink>\n              </NavItem>\n            </Nav>\n            <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n               <Button outline onClick={this.toggleModal}>\n               <span className=\"fa fa-sign-in fa-lg\"></span> Login\n               </Button>\n            </NavItem>\n            </Nav>\n            </Collapse>\n        </div>\n      </Navbar>\n      <Jumbotron>\n           <div className=\"container\">\n               <div className=\"row row-header\">\n                   <div className=\"col-12 col-sm-6\">\n                       <h1>Ristorante con Fusion</h1>\n                       <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                   </div>\n               </div>\n           </div>\n       </Jumbotron>\n       <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal} >\n         <ModalHeader toggle={this.toggleModal} >\n            Login\n         </ModalHeader>\n         <ModalBody>\n            <Form onSubmit={this.handleLogin}>\n              <FormGroup>\n                 <Label htmlFor=\"username\">Username</Label>\n                 <Input type=\"text\" id=\"username\" name=\"username\"\n                  innerRef={(input) => this.username = input} />\n              </FormGroup>\n              <FormGroup>\n                 <Label htmlFor=\"password\">Password</Label>\n                 <Input type=\"password\" id=\"password\" name=\"password\"\n                 innerRef={(input) => this.password = input} />\n              </FormGroup>\n              <FormGroup check>\n                 <Label check>\n                   <Input type=\"checkbox\" name=\"remember\"\n                   innerRef={(input) => this.remember = input} />\n                   Remember me\n                 </Label>\n              </FormGroup>\n              <Button type=\"submit\" value=\"submit\" color= \"primary\">Login</Button>\n            </Form>\n         </ModalBody>\n       </Modal>\n    </React.Fragment>\n    );\n  }\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return(\n    <div className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-4 offset-1 col-sm-2\">\n                    <h5>Links</h5>\n                    <ul className=\"list-unstyled\">\n                        <li><Link to=\"/home\">Home</Link></li>\n                        <li><Link to=\"/aboutus\">About Us</Link></li>\n                        <li><Link to=\"/menu\">Menu</Link></li>\n                        <li><Link to=\"/contactus\">Contact Us</Link></li>\n                    </ul>\n                </div>\n                <div className=\"col-7 col-sm-5\">\n                    <h5>Our Address</h5>\n                    <address>\n\t\t              121, Clear Water Bay Road<br />\n\t\t              Clear Water Bay, Kowloon<br />\n\t\t              HONG KONG<br />\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                         confusion@food.net</a>\n                    </address>\n                </div>\n                <div className=\"col-12 col-sm-4 align-self-center\">\n                    <div className=\"text-center\">\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                         <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-auto\">\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Footer;","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n   \n   const newComment ={\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment\n   }\n   newComment.date = new Date().toISOString();\n\n   return fetch(baseUrl + 'comments',{\n    method: 'POST',\n    body: JSON.stringify(newComment),\n    headers : {\n        'Content-Type': 'application/json'\n    },\n    credentials: 'same-origin'\n   })\n\n    .then(response => {\n        if (response.ok){\n            return response;\n        }\n        else {\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n        }\n    },\n     error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n     })\n    .then(response => response.json())\n    .then(response => dispatch(addComment(response)))\n    .catch(error => { console.log('Post comments ',error.message)\n       alert('Your comment could not be posted\\nError: ' + error.message); })\n}\n\n\nexport const postFeedback = (feedback) => (dispatch) => {\n\n   \n   return fetch(baseUrl + 'feedback',{\n    method: 'POST',\n    body: JSON.stringify(feedback),\n    headers : {\n        'Content-Type': 'application/json'\n    },\n    credentials: 'same-origin'\n   })\n\n    .then(response => {\n        if (response.ok){\n            return response;\n        }\n        else {\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n        }\n    },\n     error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n     })\n    .then(response => response.json())\n    .then(feedback => alert(JSON.stringify(feedback)))\n    .catch(error => { console.log('Post feedback ',error.message);\n       alert('Your feedback could not be posted\\nError: ' + error.message); });\n}\n\n\nexport const fetchDishes = () => (dispatch) =>{\n\tdispatch(dishesLoading(true));\n    return fetch(baseUrl + 'dishes')\n    .then(response => {\n    \tif (response.ok){\n    \t\treturn response;\n    \t}\n    \telse {\n    \t\tvar error = new Error('Error ' + response.status + ': ' + response.statusText);\n    \t\terror.response = response;\n    \t\tthrow error;\n    \t}\n    },\n     error => {\n     \tvar errmess = new Error(error.message);\n     \tthrow errmess;\n     })\n\n    .then(response => response.json())\n    .then(dishes => dispatch(addDishes(dishes)))\n    .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n\ttype: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n\ttype: ActionTypes.DISHES_FAILED,\n\tpayload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n\ttype: ActionTypes.ADD_DISHES,\n\tpayload: dishes\n});\n\nexport const fetchComments = () => (dispatch) =>{\n    return fetch(baseUrl + 'comments')\n    .then(response => {\n    \tif (response.ok){\n    \t\treturn response;\n    \t}\n    \telse {\n    \t\tvar error = new Error('Error' + response.status + ': ' + response.statusText);\n    \t\terror.response = response;\n    \t\tthrow error;\n    \t}\n    },\n     error => {\n     \tvar errmess = new Error(error.message);\n     \tthrow errmess;\n     })\n    .then(response => response.json())\n    .then(comments => dispatch(addComments(comments)))\n    .catch(error => dispatch(commentsFailed(error.message)));\n}\n\nexport const commentsFailed = (errmess) => ({\n\ttype: ActionTypes.COMMENTS_FAILED,\n\tpayload: errmess\n});\n\nexport const addComments = (comments) => ({\n\ttype: ActionTypes.ADD_COMMENTS,\n\tpayload: comments\n});\n\nexport const fetchPromos = () => (dispatch) =>{\n\tdispatch(promosLoading(true));\n    \n    return fetch(baseUrl + 'promotions')\n    .then(response => {\n    \tif (response.ok){\n    \t\treturn response;\n    \t}\n    \telse {\n    \t\tvar error = new Error('Error' + response.status + ':' + response.statusText);\n    \t\terror.response = response;\n    \t\tthrow error;\n    \t}\n    },\n     error => {\n     \tvar errmess = new Error(error.message);\n     \tthrow errmess;\n     })\n    .then(response => response.json())\n    .then(promos => dispatch(addPromos(promos)))\n    .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n\ttype: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n\ttype: ActionTypes.PROMOS_FAILED,\n\tpayload: errmess\n});\n\nexport const addPromos = (promos) => ({\n\ttype: ActionTypes.ADD_PROMOS,\n\tpayload: promos\n});\n\nexport const fetchLeaders = () => (dispatch) =>{\n    dispatch(leadersLoading(true));\n    \n    return fetch(baseUrl + 'leaders')\n    .then(response => {\n        if (response.ok){\n            return response;\n        }\n        else {\n            var error = new Error('Error' + response.status + ':' + response.statusText);\n            error.response = response;\n            throw error;\n        }\n    },\n     error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n     })\n    .then(response => response.json())\n    .then(promos => dispatch(addLeaders(promos)))\n    .catch(error => dispatch(leadersFailed(error.message)));\n}\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});","export const ADD_COMMENT = 'ADD_COMMENT';\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const ADD_LEADERS = 'ADD_LEADERS';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React,{ Component } from 'react';\nimport Home from './HomeComponent';\nimport Menu from './MenuComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutComponent';\nimport DishDetail from './DishDetails';\nimport Header from './HeaderComponents';\nimport Footer from './FooterComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\n const mapStateToProps = state => {\n  return {\n     dishes: state.dishes,\n     comments: state.comments,\n     promotions: state.promotions,\n     leaders: state.leaders\n  }\n }\n\n const mapDispatchToProps = (dispatch) => ({\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n  fetchDishes: () => {dispatch(fetchDishes())},\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\n  fetchComments: () => {dispatch(fetchComments())},\n  fetchPromos: () => {dispatch(fetchPromos())},\n  fetchLeaders: () => {dispatch(fetchLeaders())},\n  postFeedback: (feedback) => dispatch(postFeedback(feedback))  \n });\n\nclass Main extends Component{\n\n  componentDidMount() {\n    this.props.fetchDishes();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n    this.props.fetchLeaders();\n  }\n\n\n\n render(){\n\n  const HomePage = () => {\n    return(\n        <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n              dishesLoading={this.props.dishes.isLoading}\n              dishesErrMess={this.props.dishes.errMess}\n            promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n              promosLoading={this.props.promotions.isLoading}\n              promosErrMess={this.props.promotions.errMess}\n            leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n            leadersLoading={this.props.leaders.isLoading}\n              leadersErrMess={this.props.leaders.errMess}\n         />\n      );\n  }\n\n  const AboutPage = () => {\n    return(\n         <About  leader={this.props.leaders.leaders}\n         isLoading={this.props.leaders.isLoading}\n         errMess={this.props.leaders.errMess}\n         />\n      );\n  }\n\n    const DishWithId = ({match}) => {\n     return(\n       <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\n        isLoading={this.props.dishes.isLoading}\n         errMess={this.props.dishes.errMess}\n        comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\n        commentsErrMess={this.props.comments.errMess}\n        postComment={this.props.postComment}\n       />\n      );\n  }\n\n  return (\n    <div>\n      <Header />\n      <TransitionGroup>\n      <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300} >\n      <Switch>\n         <Route path=\"/home\" component={HomePage} />\n         <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes}/>} />\n         <Route path=\"/menu/:dishId\" component={DishWithId} />\n         <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\n         <Route exact path=\"/aboutus\" component={AboutPage} />\n         <Redirect to=\"/home\" />\n      </Switch>\n      </CSSTransition>\n      </TransitionGroup>\n      <Footer />\n    </div>\n  );\n}\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = {\n            isLoading: true,\n            errMess: null,\n            dishes: []\n          }, action) => {\n\tswitch(action.type) {\n\t\tcase ActionTypes.ADD_DISHES:\n\t\t    return {...state, isLoading: false, errMess: null, dishes: action.payload };\n\n\t\tcase ActionTypes.DISHES_LOADING:\n\t\t    return {...state, isLoading: true, errMess: null, dishes:[]};\n\n\t\tcase ActionTypes.DISHES_FAILED:\n\t\t    return {...state, isLoading: false, errMess: action.payload , dishes:[]};\n           \n\t\tdefault:\n\t\t  return state;\n\t}\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = {\n\terrMess: null,\n\tcomments: []\n    }, action) => {\n\tswitch(action.type) {\n\t\t\n\t\tcase ActionTypes.ADD_COMMENTS:\n\t\t    return {...state, isLoading: false, errMess: null, comments: action.payload };\n    \n        case ActionTypes.COMMENTS_FAILED:\n\t\t    return {...state, isLoading: false, errMess: action.payload , comments:[]};\n\n\n\t\tcase ActionTypes.ADD_COMMENT:\n\t\t         var comment = action.payload;\n\t\t         return {...state , comments: state.comments.concat(comment)};\n\t\t\n\t\t default:\n\t\t  return state;\n\t}\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state = {\n            isLoading: true,\n            errMess: null,\n            promotions: []\n          }, action) => {\n\tswitch(action.type) {\n          \n          case ActionTypes.ADD_PROMOS:\n\t\t    return {...state, isLoading: false, errMess: null, promotions: action.payload };\n\n\t\tcase ActionTypes.PROMOS_LOADING:\n\t\t    return {...state, isLoading: true, errMess: null, promotions:[]};\n\n\t\tcase ActionTypes.PROMOS_FAILED:\n\t\t    return {...state, isLoading: false, errMess: action.payload , promotions:[]};\n\n\t\tdefault:\n\t\t  return state;\n\t}\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (state = {\n            isLoading: true,\n            errMess: null,\n            leaders: []\n          }, action) => {\n\tswitch(action.type) {\n          \n          case ActionTypes.ADD_LEADERS:\n\t\t    return {...state, isLoading: false, errMess: null, leaders: action.payload };\n\n\t\tcase ActionTypes.LEADERS_LOADING:\n\t\t    return {...state, isLoading: true, errMess: null, leaders:[]};\n\n\t\tcase ActionTypes.LEADERS_FAILED:\n\t\t    return {...state, isLoading: false, errMess: action.payload , leaders:[]};\n\n\t\tdefault:\n\t\t  return state;\n\t}\n}","export const InitialFeedback = {\n\tfirstname: '',\n\tlastname: '',\n\ttelnum: '',\n\temail: '',\n\tagree: false,\n\tcontactType: 'Tel.',\n\tmessage: ''\n}","import React,{ Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component{\n\n  render(){\n  return (\n  \t<Provider store={store}>\n    <BrowserRouter>\n    <div>\n      \n      <Main />\n    </div>\n    </BrowserRouter>\n    </Provider>\n  );\n}\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialFeedback } from './forms';\n\n\nexport const ConfigureStore = () => {\n\tconst store = createStore(\n\t\tcombineReducers({\n\t\t\tdishes:Dishes,\n\t\t\tcomments: Comments,\n\t\t\tpromotions: Promotions,\n\t\t\tleaders: Leaders,\n\t\t\t...createForms({\n\t\t\t\tfeedback: InitialFeedback\n\t\t\t})\n\t\t}),\n\t\tapplyMiddleware(thunk,logger)\n\t\t);\n\treturn store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}